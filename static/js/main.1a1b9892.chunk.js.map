{"version":3,"sources":["Component/NavBar.js","Component/TextForm.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","aboutUtls","onClick","toggleMode","htmlFor","modeText","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","count","setCount","_useState5","_useState6","count1","setCount1","countChar","countCons","heading","onChange","event","target","value","rows","style","backgroundColor","color","newtxt","toUpperCase","showAlert","toLowerCase","length","charAt","match","split","join","Alert","alert","msg","defaultProps","App","setMode","setModeText","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"wKAIe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OACEE,UAAS,mCAAAC,OAAqCN,EAAMO,KAAI,QAAAD,OAAON,EAAMO,OAErEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeG,KAAK,KAC9BR,EAAMS,OAETR,EAAAC,EAAAC,cAAA,UACEE,UAAU,iBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXd,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAElBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BW,GAAG,0BAC3Cf,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAI,SAI9DP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAWG,KAAK,KAAI,UAInCP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBACZJ,EAAAC,EAAAC,cAAA,KACEE,UAAU,4BACVG,KAAK,IACLU,KAAK,SACLP,iBAAe,WACfG,gBAAc,SAEbd,EAAMmB,WAETlB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBACZJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgBG,KAAK,KAAI,WAIxCP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgBG,KAAK,KAAI,mBAIxCP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBAEhBJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgBG,KAAK,KAAI,0BAM5CP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,qBAAoB,cAGrCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,+BAAAC,OAA8C,UAAbN,EAAMO,KAAe,OAAO,UACzEN,EAAAC,EAAAC,cAAA,SACEE,UAAU,mBACVK,KAAK,WACLQ,KAAK,SACLF,GAAG,yBACHI,QAASpB,EAAMqB,aAEjBpB,EAAAC,EAAAC,cAAA,SACEE,UAAU,mBACViB,QAAQ,0BAEPtB,EAAMuB,eClFR,SAASC,EAASxB,GAC/B,IAuCCyB,EAEuBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAAAK,EACIN,mBAAS,GAAEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAAAG,EACMV,mBAAS,GAAEW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAY,EACdC,EAAY,EAGd,OACExC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,UAAKH,EAAM0C,QAAQ,KACnBzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,QAAQjB,UAAU,eACjCJ,EAAAC,EAAAC,cAAA,YACEE,UAAU,eACVsC,SA9Ca,SAACC,GACtBb,EAAQa,EAAMC,OAAOC,QA8Cb9B,GAAG,QACH8B,MAAOhB,EACPiB,KAAK,IACLC,MAAO,CACLC,gBAAgC,SAAfjD,EAAMO,KAAkB,UAAW,QAAS2C,MAAsB,SAAflD,EAAMO,KAAkB,QAAQ,YAI1GN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QAjE1B,WACnB,IAAI+B,EAASrB,EAAKsB,cAClBrB,EAAQoB,GACRnD,EAAMqD,UAAU,qBAAqB,aA8D+B,wBAGhEpD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QA/D1B,WACnB,IAAI+B,EAASrB,EAAKwB,cAClBvB,EAAQoB,GACRnD,EAAMqD,UAAU,qBAAsB,aA4D8B,wBAGhEpD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QAzD3B,WAClB,IAAIc,EAAM,EAAEA,EAAMJ,EAAKyB,OAAOrB,IACzBJ,EAAK0B,OAAOtB,GAAOuB,MAAM,iBAE1BtB,IADAK,GAIJxC,EAAMqD,UAAU,mBAAoB,aAkDiC,UAGjEpD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QAlDxB,WACrB,IAAKkB,EAAS,EAAGA,GAAUR,EAAKyB,OAAQjB,IAClCR,EAAK0B,OAAOlB,GAAQmB,MAAM,iDAG5BlB,IADAE,GAIJzC,EAAMqD,UAAU,uBAAwB,aA0CgC,cAGpEpD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QA1CxB,WACrB,IAAI+B,EAASrB,EAAK4B,MAAM,QACxB3B,EAAQoB,EAAOQ,KAAK,MACpB3D,EAAMqD,UAAU,sBAAuB,aAuCiC,uBAKtEpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,UAAI,uBACJF,EAAAC,EAAAC,cAAA,SACG2B,EAAK4B,MAAM,KAAKH,OAAO,cAAYzB,EAAKyB,OAAO,cAElDtD,EAAAC,EAAAC,cAAA,SAAI,KAAQ2B,EAAK4B,MAAM,KAAKH,OAAO,oBACnCtD,EAAAC,EAAAC,cAAA,UAAI,aACJF,EAAAC,EAAAC,cAAA,SAAI2B,GACJ7B,EAAAC,EAAAC,cAAA,SAAG,wBAAsB+B,GACzBjC,EAAAC,EAAAC,cAAA,SAAG,4BAA0BmC,KC5FtB,SAASsB,EAAM5D,GAC5B,OACEA,EAAM6D,OAAU5D,EAAAC,EAAAC,cAAA,OAAKE,UAAS,eAAAC,OAAiBN,EAAM6D,MAAMnD,KAAI,gCAAgCQ,KAAK,SAClGjB,EAAAC,EAAAC,cAAA,cAASH,EAAM6D,MAAMnD,MAAc,KAAGV,EAAM6D,MAAMC,KFgGxD/D,EAAOgE,aAAe,CACpBtD,MAAO,wBACPU,UAAW,yBGtCE6C,MAzDf,WAAe,IAAAvC,EACWC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlClB,EAAIoB,EAAA,GAAEsC,EAAOtC,EAAA,GAAAK,EACYN,mBAAS,mBAAkBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAApDT,EAAQU,EAAA,GAAEiC,EAAWjC,EAAA,GAAAG,EACFV,mBAAS,MAAKW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAjCyB,EAAKxB,EAAA,GAAE8B,EAAQ9B,EAAA,GAEhBgB,EAAY,SAACe,EAAS1D,GAC1ByD,EAAS,CACPL,IAAKM,EACL1D,KAAMA,IAER2D,WAAW,WACTF,EAAS,OACR,OAoBL,OACElE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEIH,EAAAC,EAAAC,cAACJ,EAAM,CACLQ,KAAMA,EACNc,WAtBW,WACJ,UAATd,GACF0D,EAAQ,QACRC,EAAY,oBACZI,SAASC,KAAKvB,MAAMC,gBAAkB,UACtCqB,SAASC,KAAKvB,MAAME,MAAQ,QAC5BG,EAAU,6BAA8B,WACxCiB,SAAS7D,MAAQ,cAEjBwD,EAAQ,SACRC,EAAY,mBACZI,SAASC,KAAKvB,MAAMC,gBAAkB,QACtCqB,SAASC,KAAKvB,MAAME,MAAQ,QAC5BG,EAAU,8BAA+B,WACzCiB,SAAS7D,MAAQ,eASbc,SAAUA,IAEZtB,EAAAC,EAAAC,cAACyD,EAAK,CAACC,MAAOA,IACd5D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAKPJ,EAAAC,EAAAC,cAACqB,EAAQ,CACP6B,UAAWA,EACXX,QAAQ,uBACRnC,KAAMA,OC7CTiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWhB,SAASiB,eAAe,SACpDC,OACHvF,EAAAC,EAAAC,cAACF,EAAAC,EAAMuF,WAAU,KACfxF,EAAAC,EAAAC,cAACuF,EAAG,QAORlB","file":"static/js/main.1a1b9892.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { a } from \"react-router-dom\";\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dr opdown-toggle\"\r\n                  href=\"#\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  {props.aboutUtls}\r\n                </a>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\">Disabled</a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {props.modeText}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\n// setting user defined  proptypes\r\nNavBar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutUtls: PropTypes.object,\r\n};\r\n\r\n// setting default proprtypes\r\nNavBar.defaultProps = {\r\n  title: \"Please set Title here\",\r\n  aboutUtls: \"Please set about text\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const convertUpper = () => {\r\n    let newtxt = text.toUpperCase();\r\n    setText(newtxt);\r\n    props.showAlert(\"Converted to Upper\",\"success\");\r\n  };\r\n  const convertLower = () => {\r\n    let newtxt = text.toLowerCase();\r\n    setText(newtxt);\r\n    props.showAlert(\"Converted to Lower\", \"success\");\r\n  };\r\n  const handleOnchange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleVoClick=()=>{\r\n    for(count=0;count<text.length;count++){\r\n      if(text.charAt(count).match(/[aeiouAEIOU]/)){\r\n        countChar++;\r\n        setCount(countChar)\r\n      }\r\n    }\r\n    props.showAlert(\"Vowels displayed\", \"success\");\r\n  }\r\n\r\n  const handleConsonants=()=>{\r\n    for (count1 = 0; count1 <= text.length; count1++) {\r\n      if (text.charAt(count1).match(/[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]/)\r\n      ) {\r\n        countCons++;\r\n        setCount1(countCons);\r\n      }\r\n    }\r\n    props.showAlert(\"Consonants displayed\", \"success\");\r\n  }\r\n\r\n  const handleExtraSpace=()=>{\r\n    let newtxt = text.split(/[ ]+/);\r\n    setText(newtxt.join(\" \"));\r\n    props.showAlert(\"Extra space removed\", \"success\");\r\n  }\r\n\r\n  const [text, setText] = useState(\"\");\r\n  let [count, setCount] = useState(0);\r\n  let [count1, setCount1] = useState(0);\r\n  let countChar = 0,\r\n    countCons = 0;\r\n  // text=\"jdshajs\"//wrong way to set/modify text\r\n  // setText(\"Please enter text here :\") //  correct way to set/modify text\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h3>{props.heading}-</h3>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"mybox\" className=\"form-label\"></label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            onChange={handleOnchange}\r\n            id=\"mybox\"\r\n            value={text}\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#404040\": \"white\", color: props.mode === \"dark\" ? \"white\":\"black\"\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={convertUpper}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={convertLower}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleVoClick}>\r\n          Vowels\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleConsonants}>\r\n          Consonants\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>\r\n          Remove Extra Space\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-5\">\r\n        <h1>Your Text Summary :</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} charcters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview :</h2>\r\n        <p>{text}</p>\r\n        <p>Total no of vowels : {count}</p>\r\n        <p>Total no of Consonants : {count1}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert  && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n      {/* <button\r\n        type=\"button\"\r\n        className=\"btn-close\"\r\n        data-bs-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n      ></button> */}\r\n    </div>\r\n  );\r\n}\r\n","// import About from \"./Component/About\";\nimport NavBar from \"./Component/NavBar\";\nimport TextForm from \"./Component/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Component/Alert\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nconst ab = \"About TextUtils\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [modeText, setModeText] = useState(\"Enable DarkMode\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setModeText(\"Enable LightMode\");\n      document.body.style.backgroundColor = \"#404040\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"Dark Mode\";\n    } else {\n      setMode(\"light\");\n      setModeText(\"Enable DarkMode\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = \"Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <NavBar\n          mode={mode}\n          toggleMode={toggleMode}\n          modeText={modeText}\n        ></NavBar>\n        <Alert alert={alert}></Alert>\n        <div className=\"container my-3\">\n         \n              {/* <About /> */}\n          \n    \n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"Enter text 2 analyze\"\n                  mode={mode}\n                />\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}